/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, CompanySite as PrismaCompanySite } from "@prisma/client";

export class CompanySiteServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CompanySiteCountArgs, "select">
  ): Promise<number> {
    return this.prisma.companySite.count(args);
  }

  async companySites(
    args: Prisma.CompanySiteFindManyArgs
  ): Promise<PrismaCompanySite[]> {
    return this.prisma.companySite.findMany(args);
  }
  async companySite(
    args: Prisma.CompanySiteFindUniqueArgs
  ): Promise<PrismaCompanySite | null> {
    return this.prisma.companySite.findUnique(args);
  }
  async createCompanySite(
    args: Prisma.CompanySiteCreateArgs
  ): Promise<PrismaCompanySite> {
    return this.prisma.companySite.create(args);
  }
  async updateCompanySite(
    args: Prisma.CompanySiteUpdateArgs
  ): Promise<PrismaCompanySite> {
    return this.prisma.companySite.update(args);
  }
  async deleteCompanySite(
    args: Prisma.CompanySiteDeleteArgs
  ): Promise<PrismaCompanySite> {
    return this.prisma.companySite.delete(args);
  }
}
