/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PasswordRecoveryLog as PrismaPasswordRecoveryLog,
} from "@prisma/client";

export class PasswordRecoveryLogServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PasswordRecoveryLogCountArgs, "select">
  ): Promise<number> {
    return this.prisma.passwordRecoveryLog.count(args);
  }

  async passwordRecoveryLogs(
    args: Prisma.PasswordRecoveryLogFindManyArgs
  ): Promise<PrismaPasswordRecoveryLog[]> {
    return this.prisma.passwordRecoveryLog.findMany(args);
  }
  async passwordRecoveryLog(
    args: Prisma.PasswordRecoveryLogFindUniqueArgs
  ): Promise<PrismaPasswordRecoveryLog | null> {
    return this.prisma.passwordRecoveryLog.findUnique(args);
  }
  async createPasswordRecoveryLog(
    args: Prisma.PasswordRecoveryLogCreateArgs
  ): Promise<PrismaPasswordRecoveryLog> {
    return this.prisma.passwordRecoveryLog.create(args);
  }
  async updatePasswordRecoveryLog(
    args: Prisma.PasswordRecoveryLogUpdateArgs
  ): Promise<PrismaPasswordRecoveryLog> {
    return this.prisma.passwordRecoveryLog.update(args);
  }
  async deletePasswordRecoveryLog(
    args: Prisma.PasswordRecoveryLogDeleteArgs
  ): Promise<PrismaPasswordRecoveryLog> {
    return this.prisma.passwordRecoveryLog.delete(args);
  }
}
